"use strict";(self.webpackChunkubc_services=self.webpackChunkubc_services||[]).push([[606],{6414:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var i=t(5893),s=t(1151);const a={},r="Data Element Generation (GDE)",o={id:"GDE/documentation",title:"Data Element Generation (GDE)",description:"Intro",source:"@site/docs/GDE/documentation.md",sourceDirName:"GDE",slug:"/GDE/documentation",permalink:"/qp-gro-docs-ghpages/GDE/documentation",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"ubcSidebar",previous:{title:"CDS View Generation (GDD)",permalink:"/qp-gro-docs-ghpages/GDD/documentation"}},l={},c=[{value:"Intro",id:"intro",level:2},{value:"Technical Overview",id:"technical-overview",level:2},{value:"Limitations",id:"limitations",level:3},{value:"Usage",id:"usage",level:2}];function d(e){const n={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"data-element-generation-gde",children:"Data Element Generation (GDE)"}),"\n",(0,i.jsx)(n.h2,{id:"intro",children:"Intro"}),"\n",(0,i.jsx)(n.p,{children:"Using the automatic Data Element Generation based on QPPD elements can save a lot of manual work by developers working with QPPD.\nOften, QPPD elements are maintained by different departments within your company. Not very often the QPPD elements are maintained by developers which usally has requirements for classic Data Elements to proceed with their work regarding technical interfaces, apps, queries, ....\nIn this case a developer first needs to translate the QPPD element customizing to a DDIC data element. Each time the QPPD element got updated, the developer needs to adapt the Data Elements."}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"This is a time consuming task which is prone to errors. Let the developer focus on the important/business logic things!"})}),"\n",(0,i.jsx)(n.p,{children:"Our solution is to have a Workbench generating Data Elements/Domains which then can be easily used anywhere in your SAP system. The Data Elements are generated automatically and visualized in a user-friendly workbench where all differences and errors can be resolved."}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"The Data Element Generation is only the first step in our journey simplifying and reducing efforts and can be seen as a precondition to open doors for your Business Layer/Interfaces/Interface Views(CDS)."})}),"\n",(0,i.jsx)(n.h2,{id:"technical-overview",children:"Technical Overview"}),"\n",(0,i.jsxs)(n.p,{children:["Data Elements for QPPD elements gets administrated in our very own Workbench called ",(0,i.jsx)(n.code,{children:"/MXP/QP_GDE"})," (transaction).\nEach Data Elements gets its own Domain (where it makes sense, e.g. not for ",(0,i.jsx)(n.code,{children:"BOOL"})," which is simply ",(0,i.jsx)(n.code,{children:"XFELD"}),").\nA Data Element gets linked to a QPPD element by automatically adding it as a attribute for the QPPD element customizing (which can be called with transaction ",(0,i.jsx)(n.code,{children:"/SCT/QP_C21"}),").",(0,i.jsx)(n.br,{}),"\n","Please note, that you cannot see the Data Element linked to a QPPD element directly in ",(0,i.jsx)(n.code,{children:"/SCT/QP_C21"})," as the field is an extension (",(0,i.jsx)(n.code,{children:"/SCT/QP_TELEM-/MXP/QP_DTELNAME"}),").",(0,i.jsx)(n.br,{}),"\n","For troubleshooting and analysis purposes, open transaction ",(0,i.jsx)(n.code,{children:"/MXP/QP_GDE_VELE"}),":\n",(0,i.jsx)(n.img,{alt:"Element Extension Customizing",src:t(5917).Z+"",width:"962",height:"309"}),"\nExample for a created Data Element:\n",(0,i.jsx)(n.img,{alt:"Data Element",src:t(595).Z+"",width:"960",height:"463"})]}),"\n",(0,i.jsx)(n.h3,{id:"limitations",children:"Limitations"}),"\n",(0,i.jsxs)(n.p,{children:["Whilst it is technically possible to override Element definitions like the conversion method in QPPD custimzing ",(0,i.jsx)(n.code,{children:"/SCT/QP_C20"}),", it is highly discouraged. Consider creating new elements if it is technically different.",(0,i.jsx)(n.br,{}),"\n","Currently we only support Data Element Generation for QPPD elements and not element assignments to element groups. Thus, overriden conversion methods have no effect."]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Open transaction ",(0,i.jsx)(n.code,{children:"/MXP/QP_GDE"}),"\n",(0,i.jsx)(n.img,{alt:"Selection Screen",src:t(1005).Z+"",width:"1168",height:"297"})]}),"\n",(0,i.jsxs)(n.li,{children:["(optionally) Specify restriction for elements.",(0,i.jsx)(n.br,{}),"\n","We recommend to simply generate Data Elements for all your elements. You can also do a restriction in the detail view later."]}),"\n",(0,i.jsxs)(n.li,{children:["Specify a DDIC prefix. All your Data Elements gets created by the following pattern ",(0,i.jsx)(n.code,{children:"<<ddic_prefix>>_<<element_name>>"})]}),"\n",(0,i.jsx)(n.li,{children:"Package"}),"\n",(0,i.jsxs)(n.li,{children:["Specify Transport requests","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Workbench to simply add your changes to a transport request. Please note that it is only necessary if you are not using a local package like ",(0,i.jsx)(n.code,{children:"$TMP"})]}),"\n",(0,i.jsxs)(n.li,{children:["Customizing request to save the link between QPPD element and Data Element. If not specified, the link gets persisted in ",(0,i.jsx)(n.code,{children:"/SCT/QP_TELEM-/MXP/QP_DTELNAME"})," but not transported."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Hiting on Execute gets you to the detail screen showing your selected QPPD elements\n",(0,i.jsx)(n.img,{alt:"Overview Data Element Generation",src:t(799).Z+"",width:"1178",height:"475"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:['In the column "Status" you can see wether there is a re-generation needed or not.',(0,i.jsx)(n.br,{}),"\n",'In the column "Errors" you can see if there are any errors preventing re-generation of your element, for example invalid Customizing.']}),"\n",(0,i.jsxs)(n.p,{children:['Clicking on "Save" generates all elements where a change was detected. You can optionally restrict the generation for a few elements by selecting lines before hitting "Save". Once done you will se a docking container showing all the save and activation messages (success/errors). The worklist above gets updated immediately.\n',(0,i.jsx)(n.img,{alt:"Application Log Result",src:t(2673).Z+"",width:"922",height:"297"}),"\nThe link to you newly generated Data Elements gets persisted in QPPD customizing table."]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},5917:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/figure_001-a54e8b29fee97d8ed99d33b5180a6a36.png"},595:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/figure_002-9c04ce1b8391db6b451527fcaca67bdd.png"},1005:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/figure_003-d97ca15fca3f390dd87fdd550f0b9ddb.png"},799:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/figure_004-3efefe7c20f14eb89d75afb4966ccb90.png"},2673:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/figure_005-c1bd7f7f87ff4e5deaadac1750f660a7.png"}}]);